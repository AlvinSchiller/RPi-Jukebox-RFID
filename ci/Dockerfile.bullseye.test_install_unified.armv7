# Target to build and install all needed base configuration and packages
FROM debian:bullseye-slim as base

ENV DOCKER_RUNNING=true
ENV DEBIAN_FRONTEND=noninteractive
RUN touch /boot/cmdlinetxt

RUN apt-get update \
  && apt-get -y install \
    apt-utils \
    curl \
    gnupg \
  && echo 'deb http://raspbian.raspberrypi.org/raspbian/ bullseye main contrib non-free rpi' > /etc/apt/sources.list.d/raspi.list \
  && echo 'deb http://archive.raspberrypi.org/debian/ bullseye main' >> /etc/apt/sources.list.d/raspi.list \
  && curl http://raspbian.raspberrypi.org/raspbian.public.key | apt-key add - \
  && curl http://archive.raspberrypi.org/debian/raspberrypi.gpg.key | apt-key add - \
  && apt-get update \
  && apt-get -y upgrade \
  && apt-get -y install \
    build-essential \
    git \
    iw \
    locales \
    sudo \
    systemd \
    wget \
    wpasupplicant \
    # install internally used packages here to speed up GitHub Action
    raspberrypi-kernel-headers \
  && rm -rf /var/lib/apt/lists/*
# ------


# Target for setting up user for test. user can be selected with the docker '--user $USERNAME' option
FROM base as user
ENV TEST_USER_GROUP=test

    # Group used for assigning file permissions
RUN groupadd --gid 1002 $TEST_USER_GROUP

RUN export USER_PI=pi \
  && export USER_PI_GROUP=$USER_PI \
  && groupadd --gid 1000 $USER_PI_GROUP \
  && useradd -u 1000 -g $USER_PI_GROUP -G sudo,$TEST_USER_GROUP -d /home/$USER_PI -m -s /bin/bash -p '$1$iV7TOwOe$6ojkJQXyEA9bHd/SqNLNj0' $USER_PI \
  && echo "$USER_PI ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/$USER_PI

RUN export USER_ALT=hans \
  && export USER_ALT_GROUP=wurst \
  && groupadd --gid 1001 $USER_ALT_GROUP \
  && useradd -u 1001 -g $USER_ALT_GROUP -G sudo,$TEST_USER_GROUP -d /home/$USER_ALT -m -s /bin/bash -p '$1$iV7TOwOe$6ojkJQXyEA9bHd/SqNLNj0' $USER_ALT \
  && echo "$USER_ALT ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/$USER_ALT
# ------


# Target for adding envs and scripts from the repo to test installation
FROM user as test
ARG GIT_BRANCH
ARG GIT_URL

ENV GIT_BRANCH=$GIT_BRANCH GIT_URL=$GIT_URL

COPY --chown=root:$TEST_USER_GROUP --chmod=770 scripts/installscripts/buster-install-default.sh .
WORKDIR /tests
COPY --chown=root:$TEST_USER_GROUP --chmod=770 scripts/installscripts/tests/*.sh .
# ------


# Target for applying latest updates (should not be cached!)
FROM test as test-update
RUN apt-get update \
  && apt-get -y upgrade \
  && rm -rf /var/lib/apt/lists/*
# ------
